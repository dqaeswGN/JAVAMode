package com.lean.ssm.chapter2.reflect;

import java.lang.reflect.Method;

public class ReflectTest {
	public static Object getInstance(Object classname){
		Object object=null;
		try{
			object=Class.forName(classname.toString()).newInstance();
			Method method=object.getClass().getMethod("sayHello", String.class);
			method.invoke("ÍõÒ»");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return object;
	}
	
	public ReflectServiceImpl2 getInstance() {
	    ReflectServiceImpl2 object = null;
	    try {
	        object =  (ReflectServiceImpl2) Class.forName("ReflectServiceImpl2").
	            getConstructor(String.class).newInstance("¹úÄþ");
	    } catch (Exception ex) {
	            ex.printStackTrace();
	    }
	    return object;
	}
	
	public static void main(String[] args) {
		getInstance(new ReflectServiceImpl());
	}

}
