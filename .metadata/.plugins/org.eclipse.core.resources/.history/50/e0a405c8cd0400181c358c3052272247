package com.lean.ssm.chapter2.intercept;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

public class InterceptorJdkProxy implements InvocationHandler {
	
	// 真实对象
	private Object target = null;
	private String interceptorClass = null;//拦截器全限定名
	
	public InterceptorJdkProxy(Object target, String interceptorClass) {
		this.target=target;
		this.interceptorClass=interceptorClass;
	}
	public Object bind(Object target, String interceptorClass){
		return Proxy.newProxyInstance(target.getClass().getClassLoader(), 
				target.getClass().getInterfaces(), h)
	}
	
	@Override
	public Object invoke(Object arg0, Method arg1, Object[] arg2)
			throws Throwable {
		
		return null;
	}

}
