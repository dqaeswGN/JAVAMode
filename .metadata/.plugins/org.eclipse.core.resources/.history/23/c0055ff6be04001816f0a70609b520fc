package com.lean.ssm.chapter2.proxy;

import java.lang.reflect.Proxy;

import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.InvokeHandler;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;

public class JdkproxyExample implements InvokeHandler {
	
	// 真实对象
	private Object target = null;
		
	/**
	* 建立代理对象和真实对象的代理关系，并返回代理对象
	* 
	* @param target真实对象
	* @return 代理对象
	*/
	public Object bind(Object target) {
		this.target=target;
		return Proxy.newProxyInstance(target.getClass().getClassLoader(), 
				target.getClass().getInterfaces(), this);
	}

	@Override
	public OutputStream _invoke(String arg0, InputStream arg1,
			ResponseHandler arg2) throws SystemException {
		
		return null;
	}

}
